<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>JPrasojo's blog</title><link href="http://blog.theprasojos.web.id/" rel="alternate"></link><link href="http://blog.theprasojos.web.id/feeds/unixlinux.atom.xml" rel="self"></link><id>http://blog.theprasojos.web.id/</id><updated>2010-08-14T00:00:00+01:00</updated><entry><title>Bye bye OpenSolaris ?</title><link href="http://blog.theprasojos.web.id/bye-bye-opensolaris.html" rel="alternate"></link><updated>2010-08-14T00:00:00+01:00</updated><author><name>Lintang JP</name></author><id>tag:blog.theprasojos.web.id,2010-08-14:bye-bye-opensolaris.html</id><summary type="html">&lt;p&gt;So, I heard that OpenSolaris will be dead a.k.a discontinued.
Me my self, currently has no reason to use OpenSolaris. Why ? Simple question, what cant a Solaris box do compared to OpenSolaris ? currently Solaris also stil free, gcc stil runs on it, (sunfreeware.com ?). Need to install Oracle ? Oracle onlys supports Solaris distribution - not OpenSolaris. Need SUN's good old JDK ? use Solaris :) Not to mention that OpenSolaris distro's loves x86 too much instead Sparc ( well, almost all of my machines in my test lab were sparc :D ). Nexenta for example, the one that I -was- believe to be the ice breaker in Solaris world with their apt-get style, seems love x86 too much. Not too mention the stupidness of OpenSolaris AI installer for Sparc, which need an x86 OpenSolaris to be installed first, plus its additional macro thingy to be configured during wanboot. Why would I need that in Solaris ? Why cant I just plug the disc and do boot - install to my sparc machine ?&lt;/p&gt;
&lt;p&gt;So now, there are only 2 options for my sparc machines, use Solaris, or Linux :D. Debian can run on Sparc platform. Just install sparc-utils, and we'll get the similar administration CLI just as we did on Sparc Solaris.&lt;/p&gt;
&lt;p&gt;But too bad, Debian's apt package for solaris mostly compiled for 32 bit platform. If we need to boost the performace for our apps, we should re-compile it. No big deal, gcc is available :)&lt;/p&gt;</summary><category term="OS Linux stuff OpenSolaris solaris"></category></entry><entry><title>Quick guide on UNIX task scheduling with at and batch command</title><link href="http://blog.theprasojos.web.id/quick-guide-on-unix-task-scheduling-with-at-and-batch-command.html" rel="alternate"></link><updated>2009-05-18T00:00:00+01:00</updated><author><name>Lintang JP</name></author><id>tag:blog.theprasojos.web.id,2009-05-18:quick-guide-on-unix-task-scheduling-with-at-and-batch-command.html</id><summary type="html">&lt;p&gt;While task scheduling in UNIX commonly uses Crontab facilities, UNIX based system (actually, Windows provide it too, at.exe) also provide at command. Both related to the same area, task scheduling. While Crontab aims to schedule a recurring command (every minutes, every month, every week, etc), at command aims to schedule a task that run once, with specific time arguments. Here’s one example of how we can schedule a task with at command:&lt;/p&gt;
&lt;p&gt;$ at now 1 hour &amp;amp;1 &amp;gt; outfile | mailx mygroup
!
commands will be executed using /bin/tcsh
job 1242637613.s at Mon May 18 16:06:53 2009&lt;/p&gt;
&lt;p&gt;As we can see from the example above, we want to schedule a task to be executed 1 hour from now, and the task to be executed is diff file1 file2 2&amp;gt;&amp;amp;1 &amp;gt; outfile | mailx mygroup. The at command then returns the job id, which we will able to list all the queueing at command using atq or at –l below:&lt;/p&gt;
&lt;p&gt;$ atq
Rank Execution Date Owner Job Queue Job Name
1st May 18, 2009 17:06 minsat 1242637774.a a stdin&lt;/p&gt;
&lt;p&gt;$ at -l
1242637774.a Mon May 18 16:18:45 2009&lt;/p&gt;
&lt;p&gt;From above we can see that there are only 1 jobs queuing at queue named ‘a’ (this is special queue name for at, and it is used to distinguish between the job executed by at and batch command). We can also see that the execution time will be May 18, 2009 17:06.&lt;/p&gt;
&lt;p&gt;And to cancel the scheduled at command, we use atrm or at –r command as follows:&lt;/p&gt;
&lt;p&gt;$ atrm 1242637774.a
1242637774.a: removed&lt;/p&gt;
&lt;p&gt;$ at -r 1242637774.a
1242637774.a: removed&lt;/p&gt;
&lt;p&gt;There are lots of other parameter we can use for describing the time parameter and how to execute the at command which is I found it quite ‘human readable’. Here’s some list of other possible parameter we can use:&lt;/p&gt;
&lt;p&gt;1. Direct time
$ at 01.30
$ at 0815am Jan 24
$ at 5 pm FRIday
2. Now keyword
$ at now 1 minutes
$ at now 1 hours
$ at now " 1day"
3. Tomorrow keyword
$ at 0830 tomorrow
4. Noon keyword
$ at noon tomorrow
5. Midnight keyword
$ at midnight tomorrow
6. Week keyword
$ at 2pm next week
7. Piped with other command
$ echo "mail -s 'REMINDER: Task Scheduler samples' lintang.jp@gmail.com" | at '5/18/2009 10:00AM'
8. Putting the job inside a file
$ at –f runScript.sh now 1 hour
9. Sending an email after the job is completed
$ at –m –f runScript.sh now 1 hour
10. Using another shell instead of the user’s default shell for execution
$ at –c –f runScript.sh now 1 week // C Shell
$ at –k –f runScript.sh now 1 week // Korn Shell
$ at –s –f runScript.sh now 1 week // Bourne Shell&lt;/p&gt;
&lt;p&gt;Several behaviors and conditions that must be known when running at command as follows:&lt;/p&gt;
&lt;p&gt;1. All environment variables, current working directory, file creation mask, and system resource limits during at utility execution will be retained and used when the at job is executed. So it’s different with Crontab where we have to set our environment variables manually to be called inside our script execution.
2. The default shell environment to be used during execution is the user’s default shell, listed in /etc/passwd.
3. Any users that is allowed or forbidden to use at command are listed in the following file :&lt;/p&gt;
&lt;p&gt;1. /usr/lib/cron/at.deny // denied user
2. /usr/lib/cron/at.allow // allowed user&lt;/p&gt;
&lt;p&gt;If the file does not exist, for example: at.allow file does not exist, means that all users are allowed to use at command.&lt;/p&gt;
&lt;p&gt;While batch command is similar with at -q b -m now commands. Meaning that the batch command will use different queue with at (special queue named ‘b’), and by default it will send a report via email. It will also execute right away. If the queue is full, then the command will have to wait to be executed one by one.&lt;/p&gt;
&lt;p&gt;Resource : 1. Unix at man pages, with some slang modifications :p&lt;/p&gt;
&lt;p&gt;Fiuh, alhamdulillah, that was hard to wrote :D&lt;/p&gt;</summary><category term="Tips Unix Linux stuff"></category></entry><entry><title>Ruby Install on DSL Linux</title><link href="http://blog.theprasojos.web.id/ruby-install-on-dsl-linux.html" rel="alternate"></link><updated>2007-11-13T00:00:00+00:00</updated><author><name>Lintang JP</name></author><id>tag:blog.theprasojos.web.id,2007-11-13:ruby-install-on-dsl-linux.html</id><summary type="html">&lt;p&gt;Went home earlier than before today, after a day full of meeting with client. I missed my linux. Got a bling about ruby. This stuff sounds cool. Lot's of java programmer migrating to this language, let's give it a shot. I started my adventure by googling with some 'beginner standars' keyword regarding ruby : "howto install ruby", and I got these links :
- http://www.ruby-lang.org/id
- http://hivelogic.com/narrative/articles/ruby_rails_lighttpd_mysql_tiger?status=301
Great, I boot up my DSL linux under qemu, and start downloading the necessary package. I tried to install using DSL's extension facilities (MyDSL-ruby.dsl) but, I don't know if it's work. So I decided to download the source, and compile it, just like the good old days :)
First, I downloaded ruby &lt;a href="ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz"&gt;here&lt;/a&gt;. And then as usual, run 3 commands :
dsl@1[ruby-1.8.6]$ ./configure --prefix=/opt/ruby-1.8.6
dsl@1[ruby-1.8.6]$ make
dsl@1[ruby-1.8.6]$ sudo make install
And, I got my ruby installed in /opt/ruby-1.8.6. Dont forget to add the path reference to ruby's bin/ directory installation as follows (mine at /opt/ruby-1.8.6/bin) :
export PATH=/opt/ruby-1.8.6/bin:$PATH
To make my life easier, I put that line in /etc/profile, and run : source /etc/profile. Check whether it points to the right path, type : irb, it should shows you some prompt like this :
dsl@0[Installer]$ irb
irb(main):001:0&amp;gt;&lt;/p&gt;
&lt;p&gt;Ok, I continued my journey by getting a tools called RubyGems. This RubyGems is a handy command-line tool for managing the installation of Ruby packages, like Rails ('quoted from &lt;a href="http://hivelogic.com/narrative/articles/ruby_rails_lighttpd_mysql_tiger?status=301"&gt;here&lt;/a&gt; ').
I downloaded it from &lt;a href="http://rubyforge.org/frs/?group_id=126"&gt;here&lt;/a&gt;.
After that, I unpack it, and went inside the exploded directory and type : ruby setup.rb
This will start the installation process of RubyGems.&lt;/p&gt;
&lt;p&gt;OK, next I installed Rails, what is it ?.
Quoted from http://rubyonrails.org/, ruby itself is a programming language, and Rails is the framework, just like Struts in Java. Rails is a full-stack framework for developing database-backed web applications according to the Model-View-Control pattern.&lt;/p&gt;
&lt;p&gt;After RubyGems installed, it's all easy to install Rails, I just have to type :
sudo gem install rails --include-dependencies
And RubyGems will download all the needs.&lt;/p&gt;
&lt;p&gt;While RubyGems downloading my Rails installation, I went to next step and install PCRE and Lighttpd. PCRE is a Ruby regex extensions stands for Perl Compatible Regular Expression. I downloaded it from &lt;a href="ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-7.4.tar.gz"&gt;here&lt;/a&gt;. While Lighttpd is a webserver that became the default one when we choose Rails. I downloaded Lighttpd from &lt;a href="http://www.lighttpd.net/download/lighttpd-1.4.18.tar.bz2"&gt;here&lt;/a&gt;.
First, PCRE. I run : ./configure, make, and make install. I done the same command with Lighttpd, only that I gave different prefix on each ./configure like this :
PCRE : ./configure --prefix=/opt/pcre-7.4
Lighttpd : ./configure --prefix=/opt/Lighttpd-1.4.18
And the rest make and make install commands were same.&lt;/p&gt;
&lt;p&gt;Ok, I should be ready for rock and roll with ruby on rails.
I'll write my next experiments later. Now, it's time to get rest, we'll have a great patch deployment tomorrow :)&lt;/p&gt;</summary><category term="Ruby DSL Linux stuff"></category></entry><entry><title>SimplyMepis</title><link href="http://blog.theprasojos.web.id/simplymepis.html" rel="alternate"></link><updated>2007-08-09T00:00:00+01:00</updated><author><name>Lintang JP</name></author><id>tag:blog.theprasojos.web.id,2007-08-09:simplymepis.html</id><summary type="html">&lt;p&gt;Beberapa hari ini nyoba SimplyMepis, nice distro. As easy as Mandrake, but as powerful as Debian. Such a perfect combination. We can choose, whether RPM or APT. Ditambah internet di indosat yang sangat cepat, menjadikan nih linux mantep banget. Kecuali satu hal, ada trouble di libxml2 sehingga agak kacau nginstall PHP5. Error libxml2, padahal udah ada, /etc/ld.so.conf juga udah ngarah ke direktori itu, libxml2.so juga dah ada, so what yah ? pusing juga, belum solved. Belum lagi error bagian support PHP untuk mysql, as you know, di PHP5 sekarang mysql udah gak secara native lagi di support, kalo kita nggak nambahin parameter --with-mysql ya gak support. Maunya gak usah nginstall PHP, pindah ke java semua deh, tapi aku masih butuh phpMyAdmin nya, hehehe, mau gak mau harus nginstall PHP deh.&lt;/p&gt;
&lt;p&gt;That's All, ntar kalo ada pengalaman lagi ku share deh.&lt;/p&gt;
&lt;p&gt;Originally posted : 27/12/04 20:52&lt;/p&gt;</summary><category term=""></category></entry><entry><title>Apache Httpd and Tomcat integration using mod_jk, part 1</title><link href="http://blog.theprasojos.web.id/apache-httpd-and-tomcat-integration-using-mod_jk-part-1.html" rel="alternate"></link><updated>2007-06-03T00:00:00+01:00</updated><author><name>Lintang JP</name></author><id>tag:blog.theprasojos.web.id,2007-06-03:apache-httpd-and-tomcat-integration-using-mod_jk-part-1.html</id><summary type="html">&lt;p&gt;In my other blog, I've wrote about howto use mod_jk2 to integrate httpd and tomcat. The article can be accesed &lt;a href="http://www.jroller.com/page/JPrasojo/?anchor=setup_tomcat_clustering_and_load"&gt;here&lt;/a&gt; and &lt;a href="http://www.jroller.com/page/JPrasojo/?anchor=setup_tomcat_clustering_and_load1"&gt;here&lt;/a&gt;.
Now, since mod_jk2 has not supported again by apache-tomcat-connector developers, so in this article I will use mod_jk. I'm using :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;httpd-2.2.4, can be downloaded &lt;a href="http://apache.the.net.id/httpd/httpd-2.2.4.tar.gz"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tomcat-5.2.23, can be downloaded &lt;a href="http://apache.the.net.id/tomcat/tomcat-5/v5.5.23/bin/apache-tomcat-5.5.23.tar.gz"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tomcat-connector, can be downloaded &lt;a href="http://apache.the.net.id/tomcat/tomcat-connectors/jk/binaries/linux/jk-1.2.21/mod_jk-1.2.21-apache-2.2.x-linux-i686.so"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I prefer apache.the.net.id since this is the nearest mirror from Indonesia. O ya, Im using Kubuntu Feisty Fawn in my laptop.
First, we install the httpd-2.2.4 first. Unzip it, place it at some directory you like. In my environment, my user has full access to /opt directory, so I'm using it.
onty@phoenix:/opt$ gunzip httpd-2.2.4.tar.gz
onty@phoenix:/opt$ tar -xvf httpd-2.2.4.tar
onty@phoenix:/opt$ mv httpd-2.2.4 httpd-2.2.4-src
onty@phoenix:/opt$ cd httpd-2.2.4-src
Configure, put the result in /opt/httpd-2.2.4, enable shared object, enable cgi support. Enabling shared object makes us able to load dynamic shared object library. We're using mod_jk's shared object, so we need to enable apache to support dynamic shared object library. This also usefull if you want to enable your apache httpd server to serve PHP also. Same like this, you would also compile PHP as shared object, and then load it dynamically to apache httpd using LoadModule syntax in your httpd.conf .
onty@phoenix:/opt/httpd-2.2.4-src$ ./configure --prefix=/opt/httpd-2.2.4 --enable-so --enable-cgi
onty@phoenix:/opt/httpd-2.2.4-src$ make  onty@phoenix:/opt/httpd-2.2.4-src$ make install
Now, try to start it using root :
onty@phoenix:/opt/httpd-2.2.4-src$ cd /opt/httpd-2.2.4
onty@phoenix:/opt/httpd-2.2.4$ su -
root@phoenix:/opt/httpd-2.2.4# bin/apachectl start
If everything ok, you should be able to point your browser to http://localhost now, and see if you can read any "It works" there.
OK, now we continue to install the tomcat connector. Apache has provided us with the binary version of the connector. As mentioned in before, we should now already download it. I'm using mod_jk-1.2.21-apache-2.2.x-linux-i686.so. What we need to do is just load this shared object so that can be used by apache, that simple ? yes :D
Edit your httpd.conf, add this line :
Include conf/extra/mod_jk.conf
This is new style from apache that makes us easier to maintain our configuration file in modular basis.
Now create a new file in conf/extra/ name it mod_jk.conf.
--------------------------------------------- mod_jk.conf -----------------------------------
JkWorkersFile /opt/httpd-2.2.4/conf/workers.properties
JkShmFile /var/log/httpd/mod_jk.shm
JkLogFile /opt/httpd-2.2.4/logs/mod_jk.log
JkLogLevel info
JkLogStampFormat "[%a %b %d %H:%M:%S %Y]"
JkMount /tomcat-docs/* router&lt;/p&gt;
&lt;p&gt;JkMount jkstatus
Order deny,allow
Deny from all
Allow from 127.0.0.1&lt;/p&gt;
&lt;p&gt;-------------------------------------------------------
From the configuration file, we can see that :
We will place the log file in /opt/httpd-2.2.4/logs/mod_jk.log.
We will configure the connectors with a file named workers.properties located in /opt/httpd-2.2.4/conf .
We will have shared file that will be used by apache and tomcat, located in /var/log/httpd/mod_jk.shm. If the directory /var/log/httpd doesnt exist yet, we should create it first using root user.
The logger level will be INFO.
We will map /tomcat-docs/ request in httpd to be handled by tomcat, so make sure that this webapp exist in tomcat. By default if you download tomcat, this webapp is already exist. Later you can change it to your own webapp. And this request will be handled by a worker named 'router'.
Last one is for jkmanager monitoring tools. There will be new context path named /jkmanager/ that will show us status for our jk_module. This context path only allowed to be accessed from 127.0.0.1 (localhost).&lt;/p&gt;
&lt;p&gt;Ok, now we need to create workers.properties in conf/ directory. See part 2 of this post.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>My (Outdated) Mac OS.X 10.4.1</title><link href="http://blog.theprasojos.web.id/my-outdated-mac-osx-1041.html" rel="alternate"></link><updated>2007-06-03T00:00:00+01:00</updated><author><name>Lintang JP</name></author><id>tag:blog.theprasojos.web.id,2007-06-03:my-outdated-mac-osx-1041.html</id><summary type="html">&lt;p&gt;I think this picture will describe enough for us ...&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://jroller.com/resources/j/JPrasojo/myMac.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Cool eh ? Sayang ini baru versi 10.4.1, yg terbaru versi 10.4.7&lt;/p&gt;</summary><category term=""></category></entry><entry><title>Nexenta Alpha 5</title><link href="http://blog.theprasojos.web.id/nexenta-alpha-5.html" rel="alternate"></link><updated>2007-06-03T00:00:00+01:00</updated><author><name>Lintang JP</name></author><id>tag:blog.theprasojos.web.id,2007-06-03:nexenta-alpha-5.html</id><summary type="html">&lt;p&gt;Hehe, alhamdulillah, seneng juga bisa nyobain nexenta alpha 5 walau hanya di vmware. Sempat kaget nggak nemu pkgadd, malah nemu apt-get. Dan pertama bingung juga waktu mau install package dasar -&amp;gt; GCC karena kalo install satu-satu dependancy nya kan nggak mungkin (bisa kriting). Akhirnya nemu repository yg harus ditambahin di /etc/apt/sources.list yaitu :&lt;/p&gt;
&lt;p&gt;deb http://gnusolaris.org/apt-obsolete elatte-unstable main contrib non-free
deb-src http://gnusolaris.org/apt-obsolete elatte-unstable main contrib non-free&lt;/p&gt;
&lt;p&gt;Terus, kepentok juga ketika menghadapi proxy kantor yg make ISA Server, dimana harus masukin username/password domain. Solusinya, make ini : http://ntlmaps.sourceforge.net/&lt;/p&gt;
&lt;p&gt;Happy nexenta-ing ... :)&lt;/p&gt;
&lt;p&gt;Sekarang mau coba me linux kan nih solaris, terus mau coba zoning di solaris, trus mau coba....WAAA IYAAAA, laptopnya mau dituker ama kantor beberapa hari lagi :( mosok install ulang rek :(( semoga vmware bisa dikopi doang .vmx nya, hopefully ....&lt;/p&gt;
&lt;p&gt;originally posted 6/26/06&lt;/p&gt;</summary><category term=""></category></entry></feed>